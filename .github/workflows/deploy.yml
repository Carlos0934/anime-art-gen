name: Deploy to AWS

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deployment:
    environment: production
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Install serverless
        run: npm install -g serverless

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHub

      - name: Deploy
        run: serverless deploy --stage prod --region ${{ secrets.AWS_REGION }}
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          REPLICATE_API_TOKEN: ${{ secrets.REPLICATE_API_TOKEN }}
          REPLICATE_CALLBACK_URL: ${{ secrets.REPLICATE_CALLBACK_URL }}
          REPLICATE_SIGNING_KEY: ${{ secrets.REPLICATE_SIGNING_KEY }}
          IMAGE_GENERATION_REQUEST_TOPIC: ${{ secrets.IMAGE_GENERATION_REQUEST_TOPIC }}
          IMAGE_GENERATION_START_TOPIC: ${{ secrets.IMAGE_GENERATION_START_TOPIC }}
          IMAGE_GENERATION_COMPLETE_TOPIC: ${{ secrets.IMAGE_GENERATION_COMPLETE_TOPIC }}
          IMAGE_GENERATION_QUEUE_URL: ${{ secrets.IMAGE_GENERATION_QUEUE_URL }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          CONFIRM_EMAIL_CALLBACK_URL: ${{ secrets.CONFIRM_EMAIL_CALLBACK_URL }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
